$TTL     604800
@IN      SOA     ns1.dnslabs.com. admin.dnslabs.com. (
   3; Serial
   604800; Refresh
   86400; Retry
   2419200; Expire
   604800 ); Negative Cache TTL
;

; name servers - NS records
IN      NS      ns1.dnslabs.com.

; name servers - A records
ns1     IN      A192.168.59.192
www     IN      A192.168.59.192



Requirements:

If both the array sizes are not the same, print "Both array sizes are not the same".
If the size is less than or equal to zero, print "<Array size> is an invalid array size"

Note:

In the Sample Input / Output provided, the highlighted text in bold corresponds to the input given by the user, and the rest of the text represents the output.
Ensure to follow the object-oriented specifications provided in the question description.
Ensure to provide the names for classes, attributes, and methods as specified in the question description.
Adhere to the code template, if provided
Please do not use System.exit(0) to terminate the program.

Sample Input/Output 1:

Enter the size for the first array

4

Enter the elements for the first array

3

8

5

3

Enter the size for the second array

4

Enter the elements for the second array

0

2

4

6

The elements of the third array

3

6

9

-3



Explanation:

Array1 = {3,8,5,3}

Array2 = {0,2,4,6}

if the integer is zero or even index, add the integers in the two arrays -> Array1[0] + Array2[0] = Array3[0]

3 + 0 = 3

If the integer is odd index subtract the integers in the two arrays -> Array1[1] - Array2[1] = Array3[1]

8 - 2 = 6

Array3 = {3.6,9,-3}



Sample Input/Output 2:

Enter the size for the first array

3

Enter the elements for the first array

8

7

1

Enter the size for the second array

2

Enter the elements for the second array

5

6

Both array size are not same



Sample Input/Output 3:

Enter the size for the first array

2

Enter the elements for the first array

7

2

Enter the size for the second array

-5

-5 is an invalid array size



import java.util.Scanner;

class ArrayOperation {
    private int[] array1;
    private int[] array2;
    private int[] array3;

    ArrayOperation(int size1, int[] elements1, int size2, int[] elements2) {
        if (size1 <= 0 || size2 <= 0) {
            System.out.println(size1 <= 0 ? size1 + " is an invalid array size" : size2 + " is an invalid array size");
            return;
        }

        if (size1 != size2) {
            System.out.println("Both array sizes are not the same");
            return;
        }

        array1 = elements1;
        array2 = elements2;
        array3 = new int[size1];
        performArrayOperation();
        displayArray();
    }

    private void performArrayOperation() {
        for (int i = 0; i < array1.length; i++) {
            if (i % 2 == 0) {
                array3[i] = array1[i] + array2[i];
            } else {
                array3[i] = array1[i] - array2[i];
            }
        }
    }

    private void displayArray() {
        System.out.println("The elements of the third array");
        for (int value : array3) {
            System.out.println(value);
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter the size for the first array");
        int size1 = scanner.nextInt();
        int[] elements1 = new int[size1];
        System.out.println("Enter the elements for the first array");
        for (int i = 0; i < size1; i++) {
            elements1[i] = scanner.nextInt();
        }

        System.out.println("Enter the size for the second array");
        int size2 = scanner.nextInt();
        int[] elements2 = new int[size2];
        System.out.println("Enter the elements for the second array");
        for (int i = 0; i < size2; i++) {
            elements2[i] = scanner.nextInt();
        }

        new ArrayOperation(size1, elements1, size2, elements2);
    }
}
